@using System
@using System.Collections
@using Models
@using System.Collections.Generic;
@using System.Linq
@using Microsoft.AspNetCore.Http.Internal
@using Microsoft.AspNetCore.Mvc.Formatters.Internal
@model IEnumerable<List>

@{
    ViewData["Title"] = "My Collection";

    //List with most items panel
    IEnumerable<List> mostItemList = Model.OrderByDescending(l => l.items.Count());

    //Most populair genres
    List<Tag> allGenreTags = new List<Tag>();
    foreach (List l in Model)
    {
        foreach (Item i in l.items)
        {
            allGenreTags.AddRange(i.tags.Where(x => x.Type == "Genre"));
        }
    }
    var populairGenres = allGenreTags.GroupBy(x => x.Name).Select(x => new { Count = x.Count(), Name = x.Key }).OrderByDescending(x => x.Count);

    //Calculating the item prices
    Item cheapestItem = new Item() { Price = int.MaxValue };
    Item mostExpensiveItem = new Item();
    Decimal totalPrice = 0;
    Decimal averagePrice = 0;
    int totalItemsPrice = 0;
    foreach (List l in Model)
    {
        Item ie = l.items.Any() ? l.items.OrderByDescending(item => item.Price).First() : new Item();
        if (ie.Price > mostExpensiveItem.Price)
        {
            mostExpensiveItem = ie;
        }
        Item ic = l.items.Where(item => item.Price > 0).Any() ? l.items.Where(item => item.Price > 0).OrderBy(item => item.Price).First() : new Item { Price = int.MaxValue };
        if (ic.Price < cheapestItem.Price)
        {
            cheapestItem = ic;
        }
        totalItemsPrice = totalItemsPrice + l.items.Where(item => item.Price > 0).Count();
        totalPrice = totalPrice + l.items.Sum(item => item.Price);
        averagePrice = totalPrice / totalItemsPrice;
    }

}

<h2>@ViewBag.Username's Collection</h2>

<div class="row">
    <div class="col-lg-4">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4>Lists with most items</h4>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>List</th>
                        <th>Item Ammount</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (List l in mostItemList.Take(5))
                    {
                        <tr>
                            <td>@l.Name</td>
                            <td>@l.items.Count()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h4>Most populair genres</h4>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Genre</th>
                        <th>Ammount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var g in populairGenres.Take(5))
                    {
                        <tr>
                            <td>@g.Name</td>
                            <td>@g.Count</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4>Item pricing</h4>
            </div>
            <div class="panel-body">
                <p>Cheapest item: <br /><b>@cheapestItem.Title</b> with a price of <b>@cheapestItem.Price</b></p>
                <p>Most Expensive item: <br /> <b>@mostExpensiveItem.Title</b> with a price of <b>@mostExpensiveItem.Price</b></p>
                <p>Average item price: <b>@String.Format("{0:0.00}", averagePrice)</b></p>
                <p>Total item price: <b>@totalPrice</b></p>
            </div>
        </div>
    </div>
</div>